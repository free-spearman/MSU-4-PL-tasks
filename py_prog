#!/usr/bin/python3
import py

from py.graph import Graph
from py.flight import Flight
from py.logger import BaseLogger
from py.susanin import Susanin
import curses as crs
import argparse as arg
import sys
#parser = arg.ArgumentParser()
#parser.add_argument('file', help='path to file to be processed')

def main(stdscr, file):
	#args = parser.parse_args()
	#name = args.file.split('=')[1]
	file = ''
	#print(file)
	input_name = file 
	#print(input_name)
	#"input_small.txt"
	#input_name = "25_cubes.txt"#
	#graph = Graph()
	#logger = BaseLogger("log.txt","MAIN") 
	#logger.log("\n\nBEGIN\n\n", "main")
	if len(sys.argv) > 1:
		s = Susanin(sys.argv[1], stdscr)
		s.loop()
	#logger.start_log("read_graph_ds")
	#read_graph_ds(input_name, graph)
	#logger.end_log()
	#print('begin')
	"""for city in graph.flights:
		for flt in graph.flights[city]:
			print(graph.flight_to_string(flt))
		print()
	""" 
if __name__ =="__main__":
	file = ''
	crs.wrapper(main, file)


#py.main()
